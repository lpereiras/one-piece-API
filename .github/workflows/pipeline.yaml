name: OPA Pipeline

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install poetry
        run: pipx install poetry

      - name: Cache poetry dependencies
        run: poetry install
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "poetry"

  lint:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Lint with ruff
        uses: astral-sh/ruff-action@v3
      - run: |
          ruff check --fix
          ruff format

  unit_tests:
    runs-on: ubuntu-latest
    needs: [setup, lint]
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install poetry
        run: pipx install poetry

      - name: Install dependencies
        run: poetry install
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "poetry"

      - name: Run unit tests
        run: poetry run pytest tests/unit -s -v

  integration_tests:
    runs-on: ubuntu-latest
    needs: [setup, lint]
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install poetry
        run: pipx install poetry

      - name: Install dependencies
        run: poetry install
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "poetry"

      - name: Run integration tests
        run: poetry run pytest tests/integration -s -v
